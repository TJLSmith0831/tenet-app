rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // POSTS and subcollections
    match /posts/{postId} {
      allow read: if true;

      // Allow create if authenticated
      allow create: if request.auth != null;

      // Allow update only by the original author
      allow update: if request.auth != null &&
                    request.auth.uid != null &&
                    request.resource.data.authorUid == resource.data.authorUid &&
                    request.resource.data.authorHandle == resource.data.authorHandle;

      // Allow delete only by the original author (using their Firebase UID)
      allow delete: if request.auth != null &&
                    request.auth.uid == resource.data.authorUid;

      // AGREEMENTS subcollection
      match /agreements/{userId} {
        // Allow any signed-in user to read agreement docs (needed for average calc)
        allow read: if request.auth != null;

        // Only allow user to write/update their own score
        allow write: if request.auth != null && request.auth.uid == userId;
      }

      // ECHOES subcollection
      match /echoes/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      match /posts/{postId}/echoes/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }

      // REPLIES subcollection (only on top-level posts)
      match /replies/{userId} {
        allow read: if request.auth != null;
        
        // Only allow a user to write their own reply if it doesn't already exist
        allow create: if request.auth != null &&
                      request.auth.uid == userId &&
                      !exists(/databases/$(database)/documents/posts/$(postId)/replies/$(userId));

        allow update, delete: if request.auth != null &&
                              request.auth.uid == userId;
      }
    }

    // USER PROFILE
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }
  }
}
